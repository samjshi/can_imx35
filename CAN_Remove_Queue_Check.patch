diff --git a/drivers/net/can/rx-offload.c b/drivers/net/can/rx-offload.c
index 7e75a87a8..09dd63aca 100644
--- a/drivers/net/can/rx-offload.c
+++ b/drivers/net/can/rx-offload.c
@@ -136,18 +136,27 @@ can_rx_offload_offload_one(struct can_rx_offload *offload, unsigned int n)
 	struct can_frame *cf;
 	int ret;
 
-	if (likely(skb_queue_len(&offload->skb_queue) <
+	skb = alloc_can_skb(offload->dev, &cf);
+	if (unlikely(!skb)) {
+		offload->dev->stats.rx_dropped++;
+		offload->dev->stats.rx_fifo_errors++;
+		skb_error = ERR_PTR(-ENOMEM);
+		return skb_error;
+	}
+
+
+	/*if (likely(skb_queue_len(&offload->skb_queue) <
 		   offload->skb_queue_len_max)) {
 		skb = alloc_can_skb(offload->dev, &cf);
 		if (unlikely(!skb))
-			skb_error = ERR_PTR(-ENOMEM);	/* skb alloc failed */
+			skb_error = ERR_PTR(-ENOMEM);	/* skb alloc failed
 	} else {
-		skb_error = ERR_PTR(-ENOBUFS);		/* skb_queue is full */
+		skb_error = ERR_PTR(-ENOBUFS);		/* skb_queue is full
 	}
 
 	/* If queue is full or skb not available, drop by reading into
 	 * overflow buffer.
-	 */
+
 	if (unlikely(skb_error)) {
 		struct can_frame cf_overflow;
 		u32 timestamp;
@@ -155,7 +164,7 @@ can_rx_offload_offload_one(struct can_rx_offload *offload, unsigned int n)
 		ret = offload->mailbox_read(offload, &cf_overflow,
 					    &timestamp, n);
 
-		/* Mailbox was empty. */
+		/* Mailbox was empty.
 		if (unlikely(!ret))
 			return NULL;
 
@@ -163,18 +172,18 @@ can_rx_offload_offload_one(struct can_rx_offload *offload, unsigned int n)
 		 * there was a problem reading the mailbox.
 		 *
 		 * Increment error counters in any case.
-		 */
+
 		offload->dev->stats.rx_dropped++;
 		offload->dev->stats.rx_fifo_errors++;
 
 		/* There was a problem reading the mailbox, propagate
 		 * error value.
-		 */
+
 		if (unlikely(ret < 0))
 			return ERR_PTR(ret);
 
 		return skb_error;
-	}
+	}*/
 
 	cb = can_rx_offload_get_cb(skb);
 	ret = offload->mailbox_read(offload, cf, &cb->timestamp, n);
@@ -191,7 +200,6 @@ can_rx_offload_offload_one(struct can_rx_offload *offload, unsigned int n)
 
 		offload->dev->stats.rx_dropped++;
 		offload->dev->stats.rx_fifo_errors++;
-
 		return ERR_PTR(ret);
 	}
 
